# Choosing a test framework tool/library ⚙️

Some of the available tool choices

| Type        | JVM (Java/Kotlin) | Python             |
| ----------- | ----------------- | ------------------ |
| xUnit style | JUnit, TestNG     | pytest, unittest   |
| BDD         | Cucumber          | Behave, pytest-bdd |

Think 🤔

- Who would be the primary **author** of the tests?
  - Are they Developers, Automation engineers (XUnit)
  - Are they Product managers, Manual testers (BDD)

## xUnit style 🤖

**Benefits** ➕

- Fast and less boilerplate
- Setup/tear downs at different levels (Suite, Class, Test)
- Flexible
- Easy to **data drive/parallelize** tests

**Tradeoffs** ➖

- Can be less readable (if not well designed)

> Tip: 💡 Write tests in [arrange-act-assert](http://wiki.c2.com/?ArrangeActAssert) pattern.

## BDD 🤝

**Benefits** ➕

- Readable (Gherkin syntax with `Given/When/Then/And`)
- Accessible to PM/Test engineers
- Provides a layer to allow non-coders to also contribute
- Generally a more readable report

**Tradeoffs** ➖

- Maintaining a BDD layer (feature files, step definitions) can be an overhead
- Less flexible
- Difficult to implement parallelization (can only do at Feature file level)
- Easy to write imperative instead of declarative feature files

> If you think Cucumber is a testing tool, please read on, because you are wrong. - Aslak Hellesøy
> Reference:
> [The worlds most misunderstood collaboration tool](https://cucumber.io/blog/collaboration/the-worlds-most-misunderstood-collaboration-tool/)

## Choosing an assertion library 🕵🏻‍♂️

- Choose a good fluent lib to make for more readable assertions

| Java/Kotlin         | Python      |
| ------------------- | ----------- |
| Google Truth ⭐️    | assertpy 🌟 |
| Hamcrest            | pytruth     |
| Native TestNG/Junit |             |
